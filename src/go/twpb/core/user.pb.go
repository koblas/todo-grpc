// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: core/user.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserStatus int32

const (
	UserStatus_REGISTERED UserStatus = 0
	UserStatus_INVITED    UserStatus = 1
	UserStatus_ACTIVE     UserStatus = 100
	UserStatus_DISABLED   UserStatus = 200
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0:   "REGISTERED",
		1:   "INVITED",
		100: "ACTIVE",
		200: "DISABLED",
	}
	UserStatus_value = map[string]int32{
		"REGISTERED": 0,
		"INVITED":    1,
		"ACTIVE":     100,
		"DISABLED":   200,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_core_user_proto_enumTypes[0].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_core_user_proto_enumTypes[0]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{0}
}

type UserSecurity int32

const (
	UserSecurity_UNKNOWN              UserSecurity = 0
	UserSecurity_USER_PASSWORD_CHANGE UserSecurity = 1
	UserSecurity_USER_FORGOT_REQUEST  UserSecurity = 2
	UserSecurity_USER_REGISTER_TOKEN  UserSecurity = 3
	UserSecurity_USER_INVITE_TOKEN    UserSecurity = 4
)

// Enum value maps for UserSecurity.
var (
	UserSecurity_name = map[int32]string{
		0: "UNKNOWN",
		1: "USER_PASSWORD_CHANGE",
		2: "USER_FORGOT_REQUEST",
		3: "USER_REGISTER_TOKEN",
		4: "USER_INVITE_TOKEN",
	}
	UserSecurity_value = map[string]int32{
		"UNKNOWN":              0,
		"USER_PASSWORD_CHANGE": 1,
		"USER_FORGOT_REQUEST":  2,
		"USER_REGISTER_TOKEN":  3,
		"USER_INVITE_TOKEN":    4,
	}
)

func (x UserSecurity) Enum() *UserSecurity {
	p := new(UserSecurity)
	*p = x
	return p
}

func (x UserSecurity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSecurity) Descriptor() protoreflect.EnumDescriptor {
	return file_core_user_proto_enumTypes[1].Descriptor()
}

func (UserSecurity) Type() protoreflect.EnumType {
	return &file_core_user_proto_enumTypes[1]
}

func (x UserSecurity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSecurity.Descriptor instead.
func (UserSecurity) EnumDescriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{1}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email           string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Status          UserStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=core.user.UserStatus" json:"status,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	HasTfa          bool                   `protobuf:"varint,7,opt,name=has_tfa,json=hasTfa,proto3" json:"has_tfa,omitempty"`
	EmailIsVerified bool                   `protobuf:"varint,8,opt,name=email_is_verified,json=emailIsVerified,proto3" json:"email_is_verified,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_REGISTERED
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetHasTfa() bool {
	if x != nil {
		return x.HasTfa
	}
	return false
}

func (x *User) GetEmailIsVerified() bool {
	if x != nil {
		return x.EmailIsVerified
	}
	return false
}

type SecureValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// e.g.
	// "arn:aws:kms:us-east-1:111111111:key/abcdef00-0123-4567-7799-012345678990"
	KeyUri string `protobuf:"bytes,1,opt,name=key_uri,json=keyUri,proto3" json:"key_uri,omitempty"`
	// opaque value that key encrypted
	DataKey string `protobuf:"bytes,2,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	// encrypted value
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SecureValue) Reset() {
	*x = SecureValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecureValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecureValue) ProtoMessage() {}

func (x *SecureValue) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecureValue.ProtoReflect.Descriptor instead.
func (*SecureValue) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{1}
}

func (x *SecureValue) GetKeyUri() string {
	if x != nil {
		return x.KeyUri
	}
	return ""
}

func (x *SecureValue) GetDataKey() string {
	if x != nil {
		return x.DataKey
	}
	return ""
}

func (x *SecureValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Used for ForgotPassword / Registration events
type UserSecurityEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action UserSecurity `protobuf:"varint,1,opt,name=action,proto3,enum=core.user.UserSecurity" json:"action,omitempty"`
	User   *User        `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// SECURE -- For password recovery and email confirmation
	Token *SecureValue `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// Used for invitations
	Sender *User `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *UserSecurityEvent) Reset() {
	*x = UserSecurityEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSecurityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSecurityEvent) ProtoMessage() {}

func (x *UserSecurityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSecurityEvent.ProtoReflect.Descriptor instead.
func (*UserSecurityEvent) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{2}
}

func (x *UserSecurityEvent) GetAction() UserSecurity {
	if x != nil {
		return x.Action
	}
	return UserSecurity_UNKNOWN
}

func (x *UserSecurityEvent) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserSecurityEvent) GetToken() *SecureValue {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UserSecurityEvent) GetSender() *User {
	if x != nil {
		return x.Sender
	}
	return nil
}

type UserChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Since some changes (e.g. password) cannot be seen in the serialized version
	Current *User `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Orig    *User `protobuf:"bytes,2,opt,name=orig,proto3" json:"orig,omitempty"`
}

func (x *UserChangeEvent) Reset() {
	*x = UserChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangeEvent) ProtoMessage() {}

func (x *UserChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangeEvent.ProtoReflect.Descriptor instead.
func (*UserChangeEvent) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{3}
}

func (x *UserChangeEvent) GetCurrent() *User {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *UserChangeEvent) GetOrig() *User {
	if x != nil {
		return x.Orig
	}
	return nil
}

type UserSettingGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserSettingGroup) Reset() {
	*x = UserSettingGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettingGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettingGroup) ProtoMessage() {}

func (x *UserSettingGroup) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettingGroup.ProtoReflect.Descriptor instead.
func (*UserSettingGroup) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserSettingGroup) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type UserSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string                       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Settings map[string]*UserSettingGroup `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserSettings) Reset() {
	*x = UserSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettings) ProtoMessage() {}

func (x *UserSettings) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettings.ProtoReflect.Descriptor instead.
func (*UserSettings) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{5}
}

func (x *UserSettings) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSettings) GetSettings() map[string]*UserSettingGroup {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UserSettingsChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *UserSettings `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Orig    *UserSettings `protobuf:"bytes,2,opt,name=orig,proto3" json:"orig,omitempty"`
}

func (x *UserSettingsChangeEvent) Reset() {
	*x = UserSettingsChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettingsChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettingsChangeEvent) ProtoMessage() {}

func (x *UserSettingsChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettingsChangeEvent.ProtoReflect.Descriptor instead.
func (*UserSettingsChangeEvent) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{6}
}

func (x *UserSettingsChangeEvent) GetCurrent() *UserSettings {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *UserSettingsChangeEvent) GetOrig() *UserSettings {
	if x != nil {
		return x.Orig
	}
	return nil
}

type UserSettingsUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string                       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Settings map[string]*UserSettingGroup `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserSettingsUpdate) Reset() {
	*x = UserSettingsUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettingsUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettingsUpdate) ProtoMessage() {}

func (x *UserSettingsUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettingsUpdate.ProtoReflect.Descriptor instead.
func (*UserSettingsUpdate) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{7}
}

func (x *UserSettingsUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSettingsUpdate) GetSettings() map[string]*UserSettingGroup {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider   string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ProviderId string `protobuf:"bytes,2,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
}

func (x *AuthInfo) Reset() {
	*x = AuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInfo) ProtoMessage() {}

func (x *AuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInfo.ProtoReflect.Descriptor instead.
func (*AuthInfo) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{8}
}

func (x *AuthInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AuthInfo) GetProviderId() string {
	if x != nil {
		return x.ProviderId
	}
	return ""
}

type FindParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Find by email address
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Find by GUID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// OAuth authentication information
	Auth *AuthInfo `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *FindParam) Reset() {
	*x = FindParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindParam) ProtoMessage() {}

func (x *FindParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindParam.ProtoReflect.Descriptor instead.
func (*FindParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{9}
}

func (x *FindParam) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *FindParam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindParam) GetAuth() *AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

type AuthenticateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User Identifier
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// TFA
	TfaType  string `protobuf:"bytes,3,opt,name=tfa_type,json=tfaType,proto3" json:"tfa_type,omitempty"`
	TfaValue string `protobuf:"bytes,4,opt,name=tfa_value,json=tfaValue,proto3" json:"tfa_value,omitempty"`
}

func (x *AuthenticateParam) Reset() {
	*x = AuthenticateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateParam) ProtoMessage() {}

func (x *AuthenticateParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateParam.ProtoReflect.Descriptor instead.
func (*AuthenticateParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{10}
}

func (x *AuthenticateParam) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticateParam) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticateParam) GetTfaType() string {
	if x != nil {
		return x.TfaType
	}
	return ""
}

func (x *AuthenticateParam) GetTfaValue() string {
	if x != nil {
		return x.TfaValue
	}
	return ""
}

// Associate an OAuth Identifier with a user
type AuthAssociateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// OAuth authentication information
	Auth *AuthInfo `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *AuthAssociateParam) Reset() {
	*x = AuthAssociateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthAssociateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthAssociateParam) ProtoMessage() {}

func (x *AuthAssociateParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthAssociateParam.ProtoReflect.Descriptor instead.
func (*AuthAssociateParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{11}
}

func (x *AuthAssociateParam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthAssociateParam) GetAuth() *AuthInfo {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CreateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string     `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string     `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name     string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status   UserStatus `protobuf:"varint,4,opt,name=status,proto3,enum=core.user.UserStatus" json:"status,omitempty"`
}

func (x *CreateParam) Reset() {
	*x = CreateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateParam) ProtoMessage() {}

func (x *CreateParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateParam.ProtoReflect.Descriptor instead.
func (*CreateParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{12}
}

func (x *CreateParam) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateParam) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateParam) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_REGISTERED
}

type UpdateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email       []string        `protobuf:"bytes,2,rep,name=email,proto3" json:"email,omitempty"`
	Password    []string        `protobuf:"bytes,3,rep,name=password,proto3" json:"password,omitempty"`
	PasswordNew []string        `protobuf:"bytes,4,rep,name=password_new,json=passwordNew,proto3" json:"password_new,omitempty"`
	Name        []string        `protobuf:"bytes,5,rep,name=name,proto3" json:"name,omitempty"`
	Status      []UserStatus    `protobuf:"varint,6,rep,packed,name=status,proto3,enum=core.user.UserStatus" json:"status,omitempty"`
	Settings    []*UserSettings `protobuf:"bytes,7,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateParam) Reset() {
	*x = UpdateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateParam) ProtoMessage() {}

func (x *UpdateParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateParam.ProtoReflect.Descriptor instead.
func (*UpdateParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateParam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateParam) GetEmail() []string {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *UpdateParam) GetPassword() []string {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *UpdateParam) GetPasswordNew() []string {
	if x != nil {
		return x.PasswordNew
	}
	return nil
}

func (x *UpdateParam) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateParam) GetStatus() []UserStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpdateParam) GetSettings() []*UserSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type VerificationParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Check to see if this token is present
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// If we're setting the password
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *VerificationParam) Reset() {
	*x = VerificationParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationParam) ProtoMessage() {}

func (x *VerificationParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationParam.ProtoReflect.Descriptor instead.
func (*VerificationParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{14}
}

func (x *VerificationParam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VerificationParam) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerificationParam) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserIdParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserIdParam) Reset() {
	*x = UserIdParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdParam) ProtoMessage() {}

func (x *UserIdParam) ProtoReflect() protoreflect.Message {
	mi := &file_core_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdParam.ProtoReflect.Descriptor instead.
func (*UserIdParam) Descriptor() ([]byte, []int) {
	return file_core_user_proto_rawDescGZIP(), []int{15}
}

func (x *UserIdParam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_core_user_proto protoreflect.FileDescriptor

var file_core_user_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x02,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x5f, 0x74, 0x66, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x54, 0x66, 0x61, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x49, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x57, 0x0a, 0x0b, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x55,
	0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6f, 0x72, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x6f, 0x72, 0x69, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3f,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x58, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x79, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x04, 0x6f, 0x72, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x6f, 0x72, 0x69, 0x67, 0x22, 0xd0, 0x01, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x58, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x47, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x7d, 0x0a,
	0x11, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x66, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x66, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x66, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x66, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x12,
	0x41, 0x75, 0x74, 0x68, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x6e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x5e, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x26, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x2a, 0x44, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45,
	0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x64, 0x12, 0x0d,
	0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0xc8, 0x01, 0x2a, 0x7e, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x46, 0x4f, 0x52,
	0x47, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49,
	0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x04, 0x32, 0xca, 0x05,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0f, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x16, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a,
	0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x12, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x14, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x67,
	0x6f, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x46, 0x6f, 0x72,
	0x67, 0x6f, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x3b, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_user_proto_rawDescOnce sync.Once
	file_core_user_proto_rawDescData = file_core_user_proto_rawDesc
)

func file_core_user_proto_rawDescGZIP() []byte {
	file_core_user_proto_rawDescOnce.Do(func() {
		file_core_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_user_proto_rawDescData)
	})
	return file_core_user_proto_rawDescData
}

var file_core_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_core_user_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_core_user_proto_goTypes = []interface{}{
	(UserStatus)(0),                 // 0: core.user.UserStatus
	(UserSecurity)(0),               // 1: core.user.UserSecurity
	(*User)(nil),                    // 2: core.user.User
	(*SecureValue)(nil),             // 3: core.user.SecureValue
	(*UserSecurityEvent)(nil),       // 4: core.user.UserSecurityEvent
	(*UserChangeEvent)(nil),         // 5: core.user.UserChangeEvent
	(*UserSettingGroup)(nil),        // 6: core.user.UserSettingGroup
	(*UserSettings)(nil),            // 7: core.user.UserSettings
	(*UserSettingsChangeEvent)(nil), // 8: core.user.UserSettingsChangeEvent
	(*UserSettingsUpdate)(nil),      // 9: core.user.UserSettingsUpdate
	(*AuthInfo)(nil),                // 10: core.user.AuthInfo
	(*FindParam)(nil),               // 11: core.user.FindParam
	(*AuthenticateParam)(nil),       // 12: core.user.AuthenticateParam
	(*AuthAssociateParam)(nil),      // 13: core.user.AuthAssociateParam
	(*CreateParam)(nil),             // 14: core.user.CreateParam
	(*UpdateParam)(nil),             // 15: core.user.UpdateParam
	(*VerificationParam)(nil),       // 16: core.user.VerificationParam
	(*UserIdParam)(nil),             // 17: core.user.UserIdParam
	nil,                             // 18: core.user.UserSettingGroup.ValuesEntry
	nil,                             // 19: core.user.UserSettings.SettingsEntry
	nil,                             // 20: core.user.UserSettingsUpdate.SettingsEntry
	(*timestamppb.Timestamp)(nil),   // 21: google.protobuf.Timestamp
}
var file_core_user_proto_depIdxs = []int32{
	0,  // 0: core.user.User.status:type_name -> core.user.UserStatus
	21, // 1: core.user.User.updated_at:type_name -> google.protobuf.Timestamp
	21, // 2: core.user.User.created_at:type_name -> google.protobuf.Timestamp
	1,  // 3: core.user.UserSecurityEvent.action:type_name -> core.user.UserSecurity
	2,  // 4: core.user.UserSecurityEvent.user:type_name -> core.user.User
	3,  // 5: core.user.UserSecurityEvent.token:type_name -> core.user.SecureValue
	2,  // 6: core.user.UserSecurityEvent.sender:type_name -> core.user.User
	2,  // 7: core.user.UserChangeEvent.current:type_name -> core.user.User
	2,  // 8: core.user.UserChangeEvent.orig:type_name -> core.user.User
	18, // 9: core.user.UserSettingGroup.values:type_name -> core.user.UserSettingGroup.ValuesEntry
	19, // 10: core.user.UserSettings.settings:type_name -> core.user.UserSettings.SettingsEntry
	7,  // 11: core.user.UserSettingsChangeEvent.current:type_name -> core.user.UserSettings
	7,  // 12: core.user.UserSettingsChangeEvent.orig:type_name -> core.user.UserSettings
	20, // 13: core.user.UserSettingsUpdate.settings:type_name -> core.user.UserSettingsUpdate.SettingsEntry
	10, // 14: core.user.FindParam.auth:type_name -> core.user.AuthInfo
	10, // 15: core.user.AuthAssociateParam.auth:type_name -> core.user.AuthInfo
	0,  // 16: core.user.CreateParam.status:type_name -> core.user.UserStatus
	0,  // 17: core.user.UpdateParam.status:type_name -> core.user.UserStatus
	7,  // 18: core.user.UpdateParam.settings:type_name -> core.user.UserSettings
	6,  // 19: core.user.UserSettings.SettingsEntry.value:type_name -> core.user.UserSettingGroup
	6,  // 20: core.user.UserSettingsUpdate.SettingsEntry.value:type_name -> core.user.UserSettingGroup
	11, // 21: core.user.UserService.FindBy:input_type -> core.user.FindParam
	14, // 22: core.user.UserService.Create:input_type -> core.user.CreateParam
	15, // 23: core.user.UserService.Update:input_type -> core.user.UpdateParam
	12, // 24: core.user.UserService.ComparePassword:input_type -> core.user.AuthenticateParam
	13, // 25: core.user.UserService.AuthAssociate:input_type -> core.user.AuthAssociateParam
	17, // 26: core.user.UserService.GetSettings:input_type -> core.user.UserIdParam
	9,  // 27: core.user.UserService.SetSettings:input_type -> core.user.UserSettingsUpdate
	16, // 28: core.user.UserService.VerificationVerify:input_type -> core.user.VerificationParam
	11, // 29: core.user.UserService.ForgotSend:input_type -> core.user.FindParam
	16, // 30: core.user.UserService.ForgotVerify:input_type -> core.user.VerificationParam
	16, // 31: core.user.UserService.ForgotUpdate:input_type -> core.user.VerificationParam
	2,  // 32: core.user.UserService.FindBy:output_type -> core.user.User
	2,  // 33: core.user.UserService.Create:output_type -> core.user.User
	2,  // 34: core.user.UserService.Update:output_type -> core.user.User
	17, // 35: core.user.UserService.ComparePassword:output_type -> core.user.UserIdParam
	17, // 36: core.user.UserService.AuthAssociate:output_type -> core.user.UserIdParam
	7,  // 37: core.user.UserService.GetSettings:output_type -> core.user.UserSettings
	7,  // 38: core.user.UserService.SetSettings:output_type -> core.user.UserSettings
	2,  // 39: core.user.UserService.VerificationVerify:output_type -> core.user.User
	2,  // 40: core.user.UserService.ForgotSend:output_type -> core.user.User
	2,  // 41: core.user.UserService.ForgotVerify:output_type -> core.user.User
	2,  // 42: core.user.UserService.ForgotUpdate:output_type -> core.user.User
	32, // [32:43] is the sub-list for method output_type
	21, // [21:32] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_core_user_proto_init() }
func file_core_user_proto_init() {
	if File_core_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecureValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSecurityEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettingGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettingsChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettingsUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthAssociateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_user_proto_goTypes,
		DependencyIndexes: file_core_user_proto_depIdxs,
		EnumInfos:         file_core_user_proto_enumTypes,
		MessageInfos:      file_core_user_proto_msgTypes,
	}.Build()
	File_core_user_proto = out.File
	file_core_user_proto_rawDesc = nil
	file_core_user_proto_goTypes = nil
	file_core_user_proto_depIdxs = nil
}
