syntax = "proto3";
package core.file.v1;

option go_package = "github.com/koblas/grpc-todo/protos";

// Upload URL RPC
message FileServiceUploadUrlRequest {
  string user_id = 1;
  string type = 2;
}
message FileServiceUploadUrlResponse { string url = 1; }

message FileServiceVerifyUrlRequest { string url = 1; }
message FileServiceVerifyUrlResponse {
  string user_id = 1;
  string type = 2;
}

message FileServiceUploadRequest {
  string path = 1;
  string query = 2;
  string content_type = 3;
  bytes data = 4;
}
message FileServicePutRequest {
  string user_id = 1;
  string file_type = 2;
  string suffix = 3;
  bytes data = 4;
}
message FileServiceUploadResponse { string path = 1; }
message FileServicePutResponse { string path = 1; }

message FileServiceGetRequest { string path = 1; }
message FileServiceGetResponse { bytes data = 1; }

message FileServiceUploadInfo {
  optional string user_id = 2; // Which user uploaded this file
  string file_type = 3; // what "kind" of file is this, this is not content-type
  optional string content_type = 4; // content-type provided by the user
  string url = 5;                   // path to where the file is
}

message FileServiceUploadEvent {
  string id = 1;
  string idemponcy_id = 2;

  FileServiceUploadInfo info = 3;
}

message FileServiceCompleteEvent {
  string id = 1;
  string idemponcy_id = 2;

  optional string error_message = 3; // Was here an error uploading this file
  optional FileServiceUploadInfo info = 4;
}

service FileService {
  rpc UploadUrl(FileServiceUploadUrlRequest) returns (FileServiceUploadUrlResponse);
  rpc VerifyUrl(FileServiceVerifyUrlRequest) returns (FileServiceVerifyUrlResponse);

  rpc Upload(FileServiceUploadRequest) returns (FileServiceUploadResponse); // Store file
  rpc Put(FileServicePutRequest) returns (FileServicePutResponse);          // Store file
  rpc Get(FileServiceGetRequest) returns (FileServiceGetResponse);          // Read File
}
