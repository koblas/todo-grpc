on:
  push:
    branches:
      - main
    # paths:
      # - "ts-client-react/**"
      # - .github/workflows/app_deploy.yaml

jobs:

  build-app:
    environment: production
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ts-client-react

    steps:
      - uses: actions/checkout@v2 # setup the repository in the runner
      - name: Setup Node.js # setup Node.js in the runner
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci # install dependencies
      - run: npm run build --if-present # build the project

      - uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: frontend
          path: dist

  build-go:
    environment: production
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src/go

    steps:
      - uses: actions/checkout@v2 # setup the repository in the runner
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
      - run: go version
      - run: go mod download # install packages
      - run: make build-lambda  # make the packages
      - uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: backend-go
          path: build

  deploy:
    environment: production
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: aws-tf

    needs:
      - build-go
      - build-app

    steps:
      - uses: actions/checkout@v2 # setup the repository in the runner
      - uses: actions/download-artifact@v3
        with:
          name: frontend
          path: ts-client-react/dist
      - uses: actions/download-artifact@v3
        with:
          name: backend-go
          path: src/go/build
      - name: Setup Node.js # setup Node.js in the runner
        uses: actions/setup-node@v1
        with:
          node-version: 18
      - run: cd aws-tf && npm ci

      #- run: npm run test:unit # run the tests
      # deploy site to netlify using secrets created on repository

      # - uses: actions/cache@v2
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-cdk
      #     restore-keys: ${{ runner.os }}-node-
      # - run: npm ci
      #   working-directory: ts-client-react/deploy
      # - run: npx cdk deploy --require-approval never --all
      #   working-directory: ts-client-react/deploy
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-west-2' }}


      # - name: cdk diff
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     working_dir: ts-client-react/deploy
      #     cdk_subcommand: 'diff'
      #     actions_comment: true
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: 'us-east-1'

      # - name: cdk deploy
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     working_dir: ts-client-react/deploy
      #     cdk_subcommand: 'deploy'
      #     cdk_args: '--require-approval never'
      #       #cdk_stack: 'stack1'
      #     actions_comment: false
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: 'us-east-1'

      # - name: cdk synth
      #   uses: youyo/aws-cdk-github-actions@v2
      #   with:
      #     working_dir: ts-client-react/deploy
      #     cdk_subcommand: 'synth'
      #     cdk_version: '1.16.2'
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: 'us-east-1'
